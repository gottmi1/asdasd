1. 고차함수의 사용
  - 함수를 호출할 때 마다 반환함수를 생성하는 함수를 고차함수라 한다.

  형식 
  const func = () => {
    return() => {
      console.log('뭐라고라고?');
    }
  }
  - 반환된 함수는 다른 변수에 저장할 수 있고, 그 변수에 저장된 함수를 다시 호출할 수 있다.
  const innerFunc = func;
  innerFunc(); // 뭐라고라고?

  - 반환하는 값을 바꾸고 싶을 때는 매개변수를 사용한다.

  const func = (msg) => {
    return() => {
      console.log();
    }
  }

  - 화살표 함수 문법에 따라 함수의 본문에서 바로 반환되는 값이 있으면 대괄호가 리턴을 생략할 수 있다.(무슨 소린지 이해 못했음)

  const func = (msg) => {
    return() => {
      console.log();
    }
  }
    ↓ ↓ ↓
    const func = (msg) => () {
      console.log(msg);
    }



2. if문 중첩 제거하기
  if문은 중첩되면 코드를 파악하기 어렵다. 다음과 같은 방법으로 if문의 중첩을 제거할 수 있다
    ★
    1)공통된 절차를 각 분기점 내부에 넣는다
    2)분기점에서 짧은 절차부터 실행하게 if문을 작성한다.
    3)짧은 절차가 끝나면 return(함수내부의 경우)이나 break(for문 내부의 경우)로 중단한다.
    4)else를 제거한다(이 때 중첩 하나가 제거됨)
    ★
    5)다음 중첩된 분기점이 나올때 1~4의 과정을 반복

    어떻게 하란겨
1. setinterval

  setTimeout과 비슷한 효과를 내지만, 한 번만 실행되는 setTimeout과는 다르게 지정한시간마다 주기적으로 지정한 함수를 실행한다.
    형식)
    setInterval(() => {
      반복할 내용
    }, 시간)

2. clearInterval과 clearTimeout

  setInterval와 setTimeout 함수는 각각 clearInterval과 clearTimeout으로 취소할 수 있다.
  그러나 clearTimeout은 setTimeout에 지정한 함수가 아직 실행되지 않았을 때만 취소할 수 있다.
    형식)
    let 아이디 = setInterval(함수, 밀리초);
    clearInterval(아이디);
    let 아이디 = setTimeout(함수, 밀리초);
    clearTimeout(아이디);

3.배열.includes
  
  ||를 이용한 코드는 배열의 includes 메서드로 반복을 줄일 수 있다.
  다음 두 코드는 같은 작업을 수행함.
    diff === '바나나' || diff === '사과' || diff === '오렌지';
    ['바나나','사과','오렌지'].includes(diff);
  

4. removeEventListener
   
  addEvnetListener로 연결한 함수를 제거할 수 있다.
  단, 연결할 때의 함수와 제거할 때의 함수가(이름이?) 같아야한다.  
    fucntion 함수() {}
    태그.addEvnetListener('이벤트', 함수);
    태그.removeEventListener('이벤트', 함수);